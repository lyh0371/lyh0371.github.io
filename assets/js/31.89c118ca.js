(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{189:function(t,s,a){"use strict";a.r(s);var r=a(0),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript对正则表达式总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript对正则表达式总结"}},[t._v("#")]),t._v(" javascript对正则表达式总结")]),t._v(" "),a("h2",{attrs:{id:"正则创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则创建"}},[t._v("#")]),t._v(" 正则创建")]),t._v(" "),a("ul",[a("li",[t._v("js风格")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sfsdfsa'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("pre风格")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/a/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),a("ul",[a("li",[t._v("i 忽略大小写")]),t._v(" "),a("li",[t._v("g  全局匹配")]),t._v(" "),a("li",[t._v("m 多行模式")])]),t._v(" "),a("p",[t._v("正则默认工作在单行模式^$指的是整个字符串文本的开头和结尾，不会识别字符串里面的换行\n"),a("br"),t._v("\n多行模式下，^$ 指的是每一行的开头和结尾，可以识别字符串里面的换行")]),t._v(" "),a("h2",{attrs:{id:"转义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义"}},[t._v("#")]),t._v(" 转义")]),t._v(" "),a("h2",{attrs:{id:"检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检测"}},[t._v("#")]),t._v(" 检测")]),t._v(" "),a("ul",[a("li",[t._v("search 类似于indexof, 有则返回位置,否则返回-1")]),t._v(" "),a("li",[t._v("match 匹配 结果为数组")]),t._v(" "),a("li",[t._v("replace 替换")]),t._v(" "),a("li",[t._v("test 返回true false 正则.test(文本)")])]),t._v(" "),a("h2",{attrs:{id:"贪婪匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪匹配"}},[t._v("#")]),t._v(" 贪婪匹配")]),t._v(" "),a("p",[t._v("正则默认情况话,会倾向匹配尽可能长的东西")]),t._v(" "),a("h2",{attrs:{id:"量词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[t._v("#")]),t._v(" 量词")]),t._v(" "),a("p",[t._v("如果不加量词,默认是一个")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("+")]),t._v(" 若干 代表大于等于一个(每一组尽可能长的去匹配) = {1,}")]),t._v(" "),a("li",[a("code",[t._v("*")]),t._v(" = {0,} 最少可以没有")]),t._v(" "),a("li",[a("code",[t._v("?")]),t._v(" = {0,1} 可有可无，有的话最多有一个")]),t._v(" "),a("li",[t._v("{n} 几个")]),t._v(" "),a("li",[t._v("{n,m} 范围")])]),t._v(" "),a("h2",{attrs:{id:"元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),a("p",[a("strong",[t._v("[]")])]),t._v(" "),a("ul",[a("li",[t._v("或 [xx]")]),t._v(" "),a("li",[t._v("表示范围[x-x]")]),t._v(" "),a("li",[t._v("排除 [^xxx]")])]),t._v(" "),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("ul",[a("li",[t._v("^ 行首")]),t._v(" "),a("li",[t._v("$ 行尾")])])])}),[],!1,null,null,null);s.default=e.exports}}]);