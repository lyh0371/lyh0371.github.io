(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{173:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("Docker 这东西，真的谁用谁说好！\n废话不多说，快乐看怎么使用把！")]),s._v(" "),t("h1",{attrs:{id:"一-docker-的基本操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-docker-的基本操作"}},[s._v("#")]),s._v(" 一. Docker 的基本操作")]),s._v(" "),t("h2",{attrs:{id:"_1-1-安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-安装-docker"}},[s._v("#")]),s._v(" 1.1 安装 Docker")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 下载关于Docker的依赖环境")]),s._v("\nyum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" yum-utils device-mapper-persistent-data lvm2\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2设置镜像源")]),s._v("\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3 安装Docker")]),s._v("\nyum makacache fast  （实际中这个命令也可以不用要）\nyum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4 启动，并设置为开机自启动，测试")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动Docker服务")]),s._v("\nsystemctl start docker\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置为开机自启")]),s._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试")]),s._v("\ndocker run hello-world\n")])])]),t("h2",{attrs:{id:"_1-2-docker-的中央仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-docker-的中央仓库"}},[s._v("#")]),s._v(" 1.2 Docker 的中央仓库")]),s._v(" "),t("blockquote",[t("ol",[t("li",[t("p",[s._v("Docker 官方中央仓库")])]),s._v(" "),t("li",[t("p",[s._v("国内的镜像网站：网易蜂巢，daoCloud")]),s._v(" "),t("p",[s._v("http://hub.daocloud.io (推荐使用)")])]),s._v(" "),t("li",[t("p",[s._v("公司内部的局域网搭建 (添加配置)")])])])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 需要在/etc/docker/daemon.json 配置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://registry.dockery-cn.com"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"insecure-registries"')]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ip:post"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启连个服务")]),s._v("\nsystemctl daemon-reload\nsystemctl restart docker\n\n")])])]),t("h2",{attrs:{id:"_1-3-镜像的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-镜像的操作"}},[s._v("#")]),s._v(" 1.3 镜像的操作")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像到本地")]),s._v("\ndocker pull\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 举个例子")]),s._v("\ndocker pull daocloud.io/library/tomcat:8.5.15-jre8\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 查看全部本地镜像")]),s._v("\ndocker images\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 删除本地镜像")]),s._v("\ndocker rmi xxx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("唯一标识"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4. 镜像的导入导出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将本地镜像导出")]),s._v("\ndocker save -o 导出路径 镜像id\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加载本地镜像文件")]),s._v("\ndocker load -i 镜像文件\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改镜像名称")]),s._v("\ndocker tag 镜像id 新镜像名称:版本\n")])])]),t("h2",{attrs:{id:"_1-4-容器的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-容器的操作"}},[s._v("#")]),s._v(" 1.4 容器的操作")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 运行容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#简单操作")]),s._v("\ndocker run 镜像的标识 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" 镜像名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 常用的参数")]),s._v("\ndocker run -d -p 宿主机端口:容器端口 --name 容器名称 镜像的标识 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" 镜像名称"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d 代表后台运行容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p 宿主机端口：容器端口：为了映射当前Linux端口和容器端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --name 容器名称：指定容器的名称")]),s._v("\n\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 查看正在运行的容器")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-aq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -a 查看全部的容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -q 查看正在运行的容器的唯一标识")]),s._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 查看容器的日志")]),s._v("\ndocker logs -f 容器id\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -f 可以滚动查看日志的最后几行")]),s._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4. 进入到容器内部")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 容器标识 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5. 删除容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止容器")]),s._v("\ndocker stop 容器id\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止全部容器")]),s._v("\ndocker stop "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -qa"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定容器")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 容器id\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除全部容器")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -qa"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("镜像和容器之间的关系")]),s._v(" "),t("p",[s._v("容器是运行起来的镜像")])]),s._v(" "),t("h1",{attrs:{id:"二-docker-应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-docker-应用"}},[s._v("#")]),s._v(" 二. Docker 应用")]),s._v(" "),t("h2",{attrs:{id:"_2-1-准备-ssm-工程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-准备-ssm-工程"}},[s._v("#")]),s._v(" 2.1 准备 SSM 工程")]),s._v(" "),t("h2",{attrs:{id:"_2-2-准备-mysql-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-准备-mysql-容器"}},[s._v("#")]),s._v(" 2.2 准备 MySql 容器")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行mysql 容器")]),s._v("\ndocker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306 --name mysql -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root daocloud.io/library/mysql:5.7.4\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果遇到报错可以重启docker")]),s._v("\nsystemctl restart docker\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果提示3306 端口被占用 可以开放3306端口 步骤如下")]),s._v("\nhttps://blog.csdn.net/weiyangdong/article/details/79540217\n")])])]),t("h2",{attrs:{id:"_2-3-把项目部署到对应的环境中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-把项目部署到对应的环境中"}},[s._v("#")]),s._v(" 2.3 把项目部署到对应的环境中")]),s._v(" "),t("h2",{attrs:{id:"_2-4-数据卷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-数据卷"}},[s._v("#")]),s._v(" 2.4 数据卷")]),s._v(" "),t("blockquote",[t("p",[s._v("数据卷 ： 将宿主中的一个目录映射到容器中的一个目录，可以实现在宿主机中修改文件内容，容器里面的内容也跟着变化")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.创建数据卷")]),s._v("\ndocker volume create 数据卷名称\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建成功后，默认会存放在这个目录下 /var/lib/docker/volumes/数据卷名称/_data")]),s._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2 查看数据卷的详细信息")]),s._v("\ndocker volume inspect 数据卷名称\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3 查看全部数据卷")]),s._v("\ndocker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4 删除数据卷")]),s._v("\ndocker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 数据卷名称\n\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5 启动容器后直接创建数据卷")]),s._v("\ndocker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 --name XXX -v 数据卷名称:要映射的路径 容器的ID\n或者\ndocker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 --name XXX -v /数据卷路径/数据卷名称:要映射的路径 容器的ID\n\ndocker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":80 --name nginx -v nginx:/usr/share/nginx/html\n\ndocker -v nginx_config:/etc/nginx\ndocker run -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":80 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v(":443 --name nginx-server -v /home/nginx/www:/usr/share/nginx/html -v /home/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /home/nginx/logs:/var/log/nginx 090\n4036449_www.wx.h5love.cn.key  9a5040dbc879\n4036449_www.wx.h5love.cn.pem\n")])])]),t("h1",{attrs:{id:"三-docker-自定义镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-docker-自定义镜像"}},[s._v("#")]),s._v(" 三. Docker 自定义镜像")]),s._v(" "),t("blockquote",[t("p",[s._v("中央仓库里面的镜像也是 Docker 用户自己上传上去的")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 创建一个Dockerfile 文件， 并且指定自定义镜像信息")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Dockerfile 文件中常见的内容")]),s._v("\n\nfrom： 指定当前自定义镜像依赖的环境\ncopy：将相对路径下的内容复制到自定义镜像中\nworkdir：声明镜像的默认工作目录\ncmd： 需要执行的命令\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#例如")]),s._v("\nfrom daocloud.io/library/tomcat:8.5.15-jre8\ncopy ssm.war /usr/local/tomcat/webapps\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#2 将准备好的Dockerfile和相对的文件拖拽到Linux操作系统中，通过Docker的命令制作镜像")]),s._v("\ndocker build -t 镜像名称 版本 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("  // 最后的. 是指当前目录\n")])])]),t("h1",{attrs:{id:"五-docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五-docker-compose"}},[s._v("#")]),s._v(" 五. Docker-Compose")]),s._v(" "),t("blockquote",[t("p",[s._v("之前运行一个镜像需要添加大量的参数")]),s._v(" "),t("p",[s._v("可以通过 Docker-Compose 编写这些参数")]),s._v(" "),t("p",[s._v("Docker-Compose 可以帮助我们批量管理容器")]),s._v(" "),t("p",[s._v("只需要通过一个 docker-componse.yml 文件去维护即可")])]),s._v(" "),t("h2",{attrs:{id:"_5-1-下载-docker-componse"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-下载-docker-componse"}},[s._v("#")]),s._v(" 5.1 下载 Docker-Componse")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 去github 下搜索Docker-Componse， 选择1.24.1版本下载")]),s._v("\n下载地址：https://github.com/docker/compose/releases/download/1.24.1/docker-compose-Linux-x86_64\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2 把下载好的文件上传到linux上")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3 修改文件名称和增加权限")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" docker-compose-liunx-x86_64 docker-compose\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" docker-componse\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4 方便后期操作，配置一个环境变量")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 将docker-compose 文件移动到/usr/local/bin\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 修改/etc/profile 文件，给/usr/local/bin 配置到环境变量中\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/profile\n \t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAVA_HOME")]),s._v(":/usr/local/bin:"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". soure /etc/profile\n\n")])])]),t("h1",{attrs:{id:"四-常见的一些命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四-常见的一些命令"}},[s._v("#")]),s._v(" 四. 常见的一些命令")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停掉某个应用")]),s._v("\nsystemctl stop mysqld\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭开机自启")]),s._v("\nsystemctl disable mysqld\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启 docker restart xxx")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如何开放3306 端口")]),s._v("\nhttps://blog.csdn.net/weiyangdong/article/details/79540217\n\nhttps://www.cnblogs.com/zfding/p/11429695.html\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# linux docker 安装nginx 并配置ssl")]),s._v("\n\nhttps://blog.csdn.net/qq_35500925/article/details/105493374?utm_medium"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("depth_1-utm_source"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# liunx 安装 pm2")]),s._v("\nhttps://my.oschina.net/u/2252639/blog/1798667\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pm2 基本操作")]),s._v("\nhttps://www.jianshu.com/p/7ba5a661f860\n\npm2 安装路径 /usr/local/node/node-v10.15.0-linux-x64/bin/pm2\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);