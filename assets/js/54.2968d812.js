(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{160:function(t,r,a){"use strict";a.r(r);var e=a(0),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器各大进程介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器各大进程介绍"}},[t._v("#")]),t._v(" 浏览器各大进程介绍")]),t._v(" "),a("h2",{attrs:{id:"浏览器进程。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器进程。"}},[t._v("#")]),t._v(" 浏览器进程。")]),t._v(" "),a("p",[t._v("主要负责界面显示、用户交互、子进程管理，同时提供存储等功能。")]),t._v(" "),a("h2",{attrs:{id:"渲染进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程"}},[t._v("#")]),t._v(" 渲染进程")]),t._v(" "),a("p",[t._v("核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页，排版引擎 Blink 和 JavaScript 引擎 V8 都是运行在该进程中，默认情况下，Chrome 会为每个 Tab 标签创建一个渲染进程。出于安全考虑，渲染进程都是运行在沙箱模式下。")]),t._v(" "),a("h2",{attrs:{id:"gpu-进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gpu-进程"}},[t._v("#")]),t._v(" GPU 进程")]),t._v(" "),a("p",[t._v("其实，Chrome 刚开始发布的时候是没有 GPU 进程的。而 GPU 的使用初衷是为了实现 3D CSS 的效果，只是随后网页、Chrome 的 UI 界面都选择采用 GPU 来绘制，这使得 GPU 成为浏览器普遍的需求。最后，Chrome 在其多进程架构上也引入了 GPU 进程。")]),t._v(" "),a("h2",{attrs:{id:"网络进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络进程"}},[t._v("#")]),t._v(" 网络进程")]),t._v(" "),a("p",[t._v("主要负责页面的网络资源加载，之前是作为一个模块运行在浏览器进程里面的，直至最近才独立出来，成为一个单独的进程。")]),t._v(" "),a("h2",{attrs:{id:"插件进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件进程"}},[t._v("#")]),t._v(" 插件进程")]),t._v(" "),a("p",[t._v("主要是负责插件的运行，因插件易崩溃，所以需要通过插件进程来隔离，以保证插件进程崩溃不会对浏览器和页面造成影响。\n讲到这里，现在你应该就可以回答文章开头提到的问题了：仅仅打开了 1 个页面，为什么有 4 个进程？因为打开 1 个页面至少需要 1 个网络进程、1 个浏览器进程、1 个 GPU 进程以及 1 个渲染进程，共 4 个；如果打开的页面有运行插件的话，还需要再加上 1 个插件进程。")]),t._v(" "),a("h2",{attrs:{id:"未来面向服务的架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未来面向服务的架构"}},[t._v("#")]),t._v(" 未来面向服务的架构")]),t._v(" "),a("p",[t._v("为了解决这些问题，在 2016 年，Chrome 官方团队使用“面向服务的架构”（Services Oriented Architecture，简称SOA）的思想设计了新的 Chrome 架构。也就是说 Chrome 整体架构会朝向现代操作系统所采用的“面向服务的架构” 方向发展，原来的各种模块会被重构成独立的服务（Service），每个服务（Service）都可以在独立的进程中运行，访问服务（Service）必须使用定义好的接口，通过 IPC 来通信，从而构建一个更内聚、松耦合、易于维护和扩展的系统，更好实现 Chrome 简单、稳定、高速、安全的目标。")])])}),[],!1,null,null,null);r.default=s.exports}}]);